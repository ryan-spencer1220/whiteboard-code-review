Question #2: Array Deduping
Write an algorithm that removes duplicates from an array. Do not use a function like filter() to solve this. Once you have solved the problem, demonstrate how it can be solved with filter(). Solve the problem with and without recursion.

Example
Input: [7, 9, "hi", 12, "hi", 7, 53]

Output: [7, 9, "hi", 12, 53]

/////////////////////////////////////////

NON FILTER METHOD SOLUTION

function answerFunction(array) {
  if(typeof(array) = array) {
    answerArray = []
    for(let i = 0; i < array.length; i++) {
      if(!answerArray.includes(array[i])) {
        answerArray.push(array[i]) // [7, 9, "hi", 12, 53]
      }
    }
  }
  return answerArray
}

FILTER METHOD SOLUTION

filteredArray = array.filter(function(item, index) {
  return array.indexOf(item) === index;
})

console.log(filteredArray)

RECURSION SOLUTION

const recursionSolutionWrapped = inputArray => {
  let answerArray = []

  const recursiveSolution = inputArray => {
    if(inputArray.length === 0) {
      return answerArray
    } else if(!answerArray.includes(inputArray[0])) {
      answerArray.push(array[0])
      inputArray.shift();
      return recursiveSolution(array)
    } else {
      inputArray.shift();
      return recursiveSolution(array)
    }
  }
  recursiveSolution(inputArray)
  return answerArray
  