Question #1: Turning Strings to URLs
URLs cannot have spaces. Instead, all spaces in a string are replaced with %20. Write an algorithm that replaces all spaces in a string with %20.

You may not use the replace() method or regular expressions to solve this problem. Solve the problem with and without recursion.

Example
Input: "Jasmine Ann Jones"

Output: "Jasmine%20Ann%20Jones"

/////////////////////////////////////////

WITHOUT RECURSION METHOD

const stringToURL = input => {
  let answer = ""
  for(let i = 0; i < input.length; i++) {
    if(input[i] === " ") {
      answer += "%20"
    } else {
      answer += input[i]
    }
  }
  return answer
}

/////////////////////////////////////////

WITH RECURSION METHOD - BROKEN

let i = 0;
let answer = "";

const stringToURLRecursive = (input) => {
  if (input === "") {
    return answer;
  } else if (input[i] === " ") {
    answer = answer + "%20";
    input = input.substring(1);
    i++;
    console.log("Space: " + answer);
  } else {
    answer = answer + input[i];
    input = input.substring(1);
    i++;
    console.log("Letter:" + input);
    console.log("Letter: " + answer);
  }
  return stringToURLRecursive(input);
};

stringToURLRecursive("Jasmine Ann Jones");
