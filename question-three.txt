Question #3: Compressing Strings
Write an algorithm that takes a string with repeated characters and compresses them, using a number to show how many times the repeated character has been compressed. For instance, aaa would be written as 3a. Solve the problem with and without recursion.

Example
Input: "aaabccdddda"

Output: "3ab2c4da"

/////////////////////////////////////////

WITHOUT RECURSION

function compressionString(string) {
  let result = ""
  let count = 0

  for(let i = 0; i < string.length; i++) {
    count++
    if(string[i] != string[i+1]) {
      result = result + string[i] + count;
      count = 0;
    }
  }
  return result.replace(/1/g, '');
}

compressionString('abbccdddda')

/////////////////////////////////////////

WITH RECURSION